package corecomponents

import (
	"fmt"
	"github.com/hyperremix/todo-app-htmx/util"
)

type IconButtonProps struct {
	Icon       templ.Component
	Variant    string
	Attributes templ.Attributes
	Tooltip    string
	Color      string
}

func getIconButtonClasses(props IconButtonProps) []string {
	color := "primary"
	if props.Color != "" {
		color = props.Color
	}

	classes := []string{"font-bold", "p-2", "rounded-full", "inline-flex"}
	classes = append(classes, variantClassesMap[fmt.Sprintf("%s:%s", props.Variant, color)]...)
	return append(classes, util.GetClassAttributeSlice(props.Attributes)...)
}

templ innerIconButton(props IconButtonProps) {
	<button class={ getIconButtonClasses(props) } { props.Attributes... }>
		@props.Icon
	</button>
}

templ IconButton(props IconButtonProps) {
	if (props.Tooltip != "") {
		<div class="relative inline-block group/check">
			@innerIconButton(props)
			<p class="absolute z-10 hidden bg-black text-white text-xs rounded-lg py-1 px-4 bottom-8 left-1/2 transform -translate-x-1/2 group-hover/check:flex justify-center w-32">
				{ props.Tooltip }
			</p>
		</div>
	} else {
		@innerIconButton(props)
	}
}
