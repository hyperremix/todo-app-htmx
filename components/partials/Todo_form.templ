package partials

import (
	"fmt"
	"github.com/hyperremix/todo-app-htmx/components/corecomponents"
	"github.com/hyperremix/todo-app-htmx/components/icons"
	"github.com/hyperremix/todo-app-htmx/model"
	"reflect"
)

type TodoFormProps struct {
	Todo model.Todo
}

func getInputAttributes(value interface{}, class string) templ.Attributes {
	attributes := templ.Attributes{}

	if class != "" {
		attributes["class"] = class
	}

	if value != reflect.Zero(reflect.TypeOf(value)).Interface() {
		attributes["value"] = fmt.Sprintf("%v", value)
	}

	return attributes
}

templ TodoForm(props TodoFormProps) {
	<div class="relative flex flex-col gap-4">
		<div class="absolute top-0 right-0">
			@corecomponents.IconButton(corecomponents.IconButtonProps{Icon: icons.Close(), Variant: "text", Attributes: templ.Attributes{"hx-get": "/", "hx-swap": "outerHTML", "hx-target": "#modal-container", "hx-trigger": "click", "hx-push-url": "true"}})
		</div>
		<h2 class="text-2xl">
			Update Todo
		</h2>
		<form class="flex flex-col items-stretch gap-3" hx-put={ fmt.Sprintf("/%v", props.Todo.ID) } hx-swap="outerHTML" hx-target="#todos-container" hx-push-url="/">
			@corecomponents.Input(corecomponents.InputProps{Name: "id", Attributes: getInputAttributes(props.Todo.ID, "hidden")})
			@corecomponents.Input(corecomponents.InputProps{Name: "title", Placeholder: "Title", Attributes: getInputAttributes(props.Todo.Title, "")})
			@corecomponents.TextArea(corecomponents.TextAreaProps{Name: "description", Placeholder: "Description", Rows: 10, Attributes: getInputAttributes(props.Todo.Description, "")})
			@corecomponents.Button(corecomponents.ButtonProps{Label: "Update", Variant: "filled"})
		</form>
	</div>
}
